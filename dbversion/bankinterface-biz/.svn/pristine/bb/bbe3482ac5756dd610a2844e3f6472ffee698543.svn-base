package com.yihuisoft.testprojectbiz.utils;

import com.yihuisoft.common.InDTO;
import com.yihuisoft.testprojectbiz.entity.BankMapping;
import org.dom4j.*;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DataToXmlUtil {

    /**
     * 这个Map 只用来返回递归所产生的参数
     */
    private Map<String, Object> smap = new HashMap<>();

    public List<BankMapping> getFatherNode(List<BankMapping> list) {
        List<BankMapping> fatherList = new ArrayList<>();
        for (BankMapping s : list) {
            if (s.getParentID() == 0) {
                //获取父节点下的子节点，根据父节点递归调用获取所有的子节点
                s.setChild(getChildrenNode(s.getId(), list));
                fatherList.add(s);
            }
        }
        return fatherList;
    }

    private List<BankMapping> getChildrenNode(long pid, List<BankMapping> list) {
        List<BankMapping> findChildrenList = new ArrayList<>();
        //循环传入的集合
        for (BankMapping s : list) {
            if (s.getParentID() == 0) {
                //父节点，不需要找
                continue;
            }
            if (s.getParentID() == pid) {
                //根据父id找到了一个子节点，加入到子节点集合中去
                findChildrenList.add(s);
                //设置子节点集合，递归调用
                s.setChild(getChildrenNode(s.getId(), list));
            }
        }
        return findChildrenList;
    }


    public String rspXml = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>" +
            "<service>" +
            "<SYS_HEAD>" +
            "<SvcCd>301030018</SvcCd>" +
            "<SvcScn>05</SvcScn>" +
            "<CnsmSysId>304400</CnsmSysId>" +
            "<CnsmSysSeqNo>30440020180123114153610422</CnsmSysSeqNo>" +
            "<TranRetSt>S</TranRetSt>" +
            "<RetInf>" +
            "<RetCd>000000</RetCd>" +
            "<RetMsg>交易成功</RetMsg>" +
            "</RetInf>" +
            "<SrcSysSeqNo>30440020180123114153610422</SrcSysSeqNo>" +
            "<SrcSysId>304400</SrcSysId>" +
            "</SYS_HEAD>" +
            "<APP_HEAD></APP_HEAD>" +
            "<BODY>" +
            "<VerNo>1.0</VerNo>" +
            "<VrfyNo>304400</VrfyNo>" +
            "<TranCd>qurgoods</TranCd>" +
            "<RqsTm>114153</RqsTm>" +
            "<TotRcrdNum>8</TotRcrdNum>" +
            "<TotPgNo>1</TotPgNo>" +
            "<PgRcrdNo>8</PgRcrdNo>" +
            "<GdsMssgArray>" +
            "<CmdtyCd>17080001</CmdtyCd>" +
            "<CmdtyNm>健康关怀</CmdtyNm>" +
            "<CmdtyDsc>高端客户兑换该权益后本人或家庭核心成员可享受一次高端健康体检服务，由专家对体检报告进行解读。                                              </CmdtyDsc>" +
            "<CmdtyPntsPrc>90.0</CmdtyPntsPrc>" +
            "<CmdtyCashPrc>0.0</CmdtyCashPrc>" +
            "<GdsTm>20170809 17:04:34</GdsTm>" +
            "<CmdtyLvlScr></CmdtyLvlScr>" +
            "<PhotoNo>tj</PhotoNo>" +
            "<CnsmRuleID></CnsmRuleID>" +
            "<CnsmRuleDsc></CnsmRuleDsc>" +
            "</GdsMssgArray>" +
            "<GdsMssgArray>" +
            "<CmdtyCd>17080006</CmdtyCd>" +
            "<CmdtyNm>300元健康礼包</CmdtyNm>" +
            "<CmdtyDsc>财富中心健康大礼包，含健康管理、疾病诊疗、急救通道三大类别，可选其中一项                                    </CmdtyDsc>" +
            "<CmdtyPntsPrc>6.0</CmdtyPntsPrc>" +
            "<CmdtyCashPrc>0.0</CmdtyCashPrc>" +
            "<GdsTm>20170809 17:04:34</GdsTm>" +
            "<CmdtyLvlScr></CmdtyLvlScr>" +
            "<PhotoNo>tj</PhotoNo>" +
            "<CnsmRuleID></CnsmRuleID>" +
            "<CnsmRuleDsc></CnsmRuleDsc>" +
            "</GdsMssgArray>" +
            "<GdsMssgArray>" +
            "<CmdtyCd>17080007</CmdtyCd>" +
            "<CmdtyNm>500元健康礼包</CmdtyNm>" +
            "<CmdtyDsc>财富中心健康大礼包，含健康管理、疾病诊疗、急救通道三大类别，可选其中两项                                    </CmdtyDsc>" +
            "<CmdtyPntsPrc>10.0</CmdtyPntsPrc>" +
            "<CmdtyCashPrc>0.0</CmdtyCashPrc>" +
            "<GdsTm>20170809 17:04:34</GdsTm>" +
            "<CmdtyLvlScr></CmdtyLvlScr>" +
            "<PhotoNo>tj</PhotoNo>" +
            "<CnsmRuleID></CnsmRuleID>" +
            "<CnsmRuleDsc></CnsmRuleDsc>" +
            "</GdsMssgArray>" +
            "<GdsMssgArray>" +
            "<CmdtyCd>17080008</CmdtyCd>" +
            "<CmdtyNm>800元健康礼包</CmdtyNm>" +
            "<CmdtyDsc>财富中心健康大礼包，含健康管理、疾病诊疗、急救通道三大类别，可选其中三项                                    </CmdtyDsc>" +
            "<CmdtyPntsPrc>16.0</CmdtyPntsPrc>" +
            "<CmdtyCashPrc>0.0</CmdtyCashPrc>" +
            "<GdsTm>20170809 17:04:34</GdsTm>" +
            "<CmdtyLvlScr></CmdtyLvlScr>" +
            "<PhotoNo>tj</PhotoNo>" +
            "<CnsmRuleID></CnsmRuleID>" +
            "<CnsmRuleDsc></CnsmRuleDsc>" +
            "</GdsMssgArray>" +
            "<GdsMssgArray>" +
            "<CmdtyCd>17080010</CmdtyCd>" +
            "<CmdtyNm>保管箱C箱</CmdtyNm>" +
            "<CmdtyDsc>保管箱业务是我行接受客户委托，以出租保管箱的形式代客户保管文件、有价证券以及贵重物品的服务项目。服务特色安全私属：安全、保密、防火、防潮、防盗，是存放贵重物品和重要档案的最佳场所。存取便利：专柜专人开箱服务。租期灵活：分A-F六种规格，最大的高120cm，最小的高8cm，分三个月、六个月、一年、一年以上等不同期限。手续简便：持身份证、兰州银行卡即可办理。保管箱地址：兰州银行天河管理行（位于兰州市城关区东岗西路449" +
            "号，飞天大酒店西侧）。咨询电话：0931-8722971。本权益服务提供的保管箱C箱尺寸为200mm×320mm×610mm，期限为1年。" +
            "</CmdtyDsc>" +
            "<CmdtyPntsPrc>30.0</CmdtyPntsPrc>" +
            "<CmdtyCashPrc>0.0</CmdtyCashPrc>" +
            "<GdsTm>20170809 17:04:34</GdsTm>" +
            "<CmdtyLvlScr></CmdtyLvlScr>" +
            "<PhotoNo>bxx</PhotoNo>" +
            "<CnsmRuleID></CnsmRuleID>" +
            "<CnsmRuleDsc></CnsmRuleDsc>" +
            "</GdsMssgArray>" +
            "<GdsMssgArray>" +
            "<CmdtyCd>17080009</CmdtyCd>" +
            "<CmdtyNm>1000元健康礼包</CmdtyNm>" +
            "<CmdtyDsc>财富中心健康大礼包，含健康管理、疾病诊疗、急救通道三大类别，可选其中四项。                                     </CmdtyDsc>" +
            "<CmdtyPntsPrc>20.0</CmdtyPntsPrc>" +
            "<CmdtyCashPrc>0.0</CmdtyCashPrc>" +
            "<GdsTm>20170809 17:04:34</GdsTm>" +
            "<CmdtyLvlScr></CmdtyLvlScr>" +
            "<PhotoNo>tj</PhotoNo>" +
            "<CnsmRuleID></CnsmRuleID>" +
            "<CnsmRuleDsc></CnsmRuleDsc>" +
            "</GdsMssgArray>" +
            "<GdsMssgArray>" +
            "<CmdtyCd>17080002</CmdtyCd>" +
            "<CmdtyNm>中川机场贵宾厅</CmdtyNm>" +
            "<CmdtyDsc>专属贵宾室候机休息，提供贵宾通道、专用安检通道、代客托运行李等服务；提供电视、时事报刊、杂志、上网等服务项目，提供五种（含）以上冷热饮品和小食品；提供航班信息问讯及登机引导服务。" +
            "</CmdtyDsc>" +
            "<CmdtyPntsPrc>2.0</CmdtyPntsPrc>" +
            "<CmdtyCashPrc>0.0</CmdtyCashPrc>" +
            "<GdsTm>20170828 16:56:27</GdsTm>" +
            "<CmdtyLvlScr></CmdtyLvlScr>" +
            "<PhotoNo>zcjc</PhotoNo>" +
            "<CnsmRuleID></CnsmRuleID>" +
            "<CnsmRuleDsc></CnsmRuleDsc>" +
            "</GdsMssgArray>" +
            "<GdsMssgArray>" +
            "<CmdtyCd>17090001</CmdtyCd>" +
            "<CmdtyNm>西客站贵宾厅</CmdtyNm>" +
            "<CmdtyDsc>兰州西客站二楼兰州银行VIP休息室休息（包括茶点，电视报刊、互联网商务、登车提醒、行李寄存及协助）独立贵宾通道、送站服务等服务。" +
            "</CmdtyDsc>" +
            "<CmdtyPntsPrc>1.0</CmdtyPntsPrc>" +
            "<CmdtyCashPrc>0.0</CmdtyCashPrc>" +
            "<GdsTm>20170901 10:35:06</GdsTm>" +
            "<CmdtyLvlScr></CmdtyLvlScr>" +
            "<PhotoNo>xkz</PhotoNo>" +
            "<CnsmRuleID></CnsmRuleID>" +
            "<CnsmRuleDsc></CnsmRuleDsc>" +
            "</GdsMssgArray>" +
            "</BODY>" +
            "</service>";

    public String listToStr(InDTO inDTO, List<BankMapping> list) {

        StringBuffer sb = new StringBuffer();
        sb.append("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n");
        for (BankMapping s : list) {
            if (s.getParentID() == 0) {
                sb.append("<" + s.getBankele() + ">\n");

                sb.append(getChildNodeStr(s.getId(), list, inDTO));

                sb.append("</" + s.getBankele() + ">");
            }
        }
        return sb.toString();
    }

    private String getChildNodeStr(long pid, List<BankMapping> list, InDTO inDTO) {
        StringBuffer str = new StringBuffer();
        //循环传入的集合
        for (BankMapping s : list) {
            if (s.getParentID() == 0) {
                continue;
            }
            if (s.getParentID() == pid) {
                str.append("<" + s.getBankele() + ">");
                if (s.getChild() == null || s.getChild().size() == 0) {
                    String tempStr = s.getYihuiele();
                    if (!(tempStr == null || tempStr.length() == 0)) {
                        str.append(inDTO.get(tempStr) == null ? "" : inDTO.get(tempStr));
                    } else {
                        //这个里转换的时候      在 命名规范的Map参数下  没问题   如果  不规范可能就要考虑了
                        String tsStr = String.valueOf(s.getBankele().charAt(0)).toLowerCase() + s.getBankele().substring(1);                          //临时性
                        if (!(tsStr == null || tsStr.length() == 0)) {
                            str.append(inDTO.get(tsStr) == null ? "" : inDTO.get(tsStr));
                        }
                    }
                }
                str.append(getChildNodeStr(s.getId(), list, inDTO));
                str.append("</" + s.getBankele() + ">\n");
            }
        }
        return str.toString();
    }


    public Map<String, Object> strToMap(String xmlStr, List<BankMapping> list) throws Exception {

        Document document = DocumentHelper.parseText(xmlStr); // 将字符串转为XML;//获取document对象,如果文档无节点，则会抛出Exception提前结束
        Element root = document.getRootElement();//获取根节点


        for (BankMapping bm : list) {
            A:
            if (bm != null)
                if (!(bm.getYihuiele() == null || bm.getYihuiele().length() <= 0)) {

                    String tempStr = bm.getYihuiele();
                    if (tempStr != null || tempStr.length() > 0) {
                        tempStr = bm.getBankele();

                        List<Element> elelist = root.selectNodes("//" + tempStr);
                        List<Map<String, Object>> yihuiList = new ArrayList();

                        if (elelist.size() == 1) {


                            for (Element node : elelist) {//遍历当前节点的所有属性

                                List<Element> listElement = node.elements();//所有一级子节点的list
                                if (listElement.size() <= 0) {
                                    if (bm.getChild().size() > 0) {
                                        smap.put(bm.getYihuiele(), bindbXml(xmlStr, list));
                                    } else {
                                        smap.put(bm.getYihuiele(), node.getText());
                                    }

                                }

                            }


                        } else { //有很多


                            for (Element node : elelist) {//遍历当前节点的所有属性


                                yihuiList.add(modelToMapObj(xmlStr, node, bm.getChild()));


                            }
                            smap.put(bm.getYihuiele(), yihuiList);

                            continue;
                        }
                    }


                }
            if (bm.getChild().size() > 0) {
                this.strToMap(xmlStr, bm.getChild());
            }
        }
        return smap;

    }


    /**
     * 根据xml  给list 绑定参数
     *
     * @param xmlStr
     * @param list
     * @return
     * @throws Exception
     */
    private Map<String, Object> bindbXml(String xmlStr, List<BankMapping> list) throws Exception {
        Map<String, Object> dataMap = new HashMap<>();

        Document document = DocumentHelper.parseText(xmlStr); // 将字符串转为XML;//获取document对象,如果文档无节点，则会抛出Exception提前结束
        Element root = document.getRootElement();//获取根节点

        for (BankMapping bm : list) {

            if (!(bm.getYihuiele() == null || bm.getYihuiele().length() <= 0)) {

                String tempStr = bm.getYihuiele();
                if (tempStr != null || tempStr.length() > 0) {
                    tempStr = bm.getBankele();

                    List<Element> elelist = root.selectNodes("//" + tempStr);
                    for (Element node : elelist) {//遍历当前节点的所有属性
                        List<Element> listElement = node.elements();//所有一级子节点的list
                        if (listElement.size() <= 0) {
                            dataMap.put(bm.getYihuiele(), node.getText());
                        }
                    }

                }
            }

        }
        return dataMap;
    }


    private Map<String, Object> modelToMapObj(String xmlStr, Element node, List<BankMapping> list) throws Exception {
        Map<String, Object> dataMap = new HashMap<>();

        for (BankMapping bp : list) {
            String nodeStr = node.element(bp.getBankele()).getText();
            dataMap.put(bp.getYihuiele(), nodeStr);
            if (bp.getChild() != null && bp.getChild().size() > 0) {
                strToMap(xmlStr, bp.getChild());
            }

        }
        return dataMap;
    }


}
